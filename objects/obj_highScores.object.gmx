<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init

ini_open("hs.dat");

newScore=0;


//Load scores
scores[0]=ini_read_real("scores", "1", 0);
scores[1]=ini_read_real("scores", "2", 0);
scores[2]=ini_read_real("scores", "3", 0);
scores[3]=ini_read_real("scores", "4", 0);
scores[4]=ini_read_real("scores", "5", 0);
scores[5]=ini_read_real("scores", "6", 0);
scores[6]=ini_read_real("scores", "7", 0);
scores[7]=ini_read_real("scores", "8", 0);
scores[8]=ini_read_real("scores", "9", 0);
scores[9]=ini_read_real("scores", "10", 0);

if (score&gt;scores[9]){
    scores[9]=score;
    newScore=1;
    
    //Sort scores
    for(i=9;i&gt;0;i--){
        if(scores[i]&gt;scores[i-1]){
            tmp=scores[i-1];
            scores[i-1]=scores[i];
            scores[i]=tmp;
        }
    }
    
    ini_write_real("scores", "1", scores[0]);
    ini_write_real("scores", "2", scores[1]);
    ini_write_real("scores", "3", scores[2]);
    ini_write_real("scores", "4", scores[3]);
    ini_write_real("scores", "5", scores[4]);
    ini_write_real("scores", "6", scores[5]);
    ini_write_real("scores", "7", scores[6]);
    ini_write_real("scores", "8", scores[7]);
    ini_write_real("scores", "9", scores[8]);
    ini_write_real("scores", "10", scores[9]);
}

ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Scores

draw_set_color(c_yellow);
draw_set_font(fnt_LCD_SOLID_BIG);
draw_set_halign(fa_center);
draw_set_valign(fa_top);

draw_text_transformed(room_width/2, 0, "High Scores", .7, .7, 0);

for(i=0;i&lt;10;i++){
    draw_text_transformed(room_width/2, 200+40*(i+1), scores[i], .4, .4, 0);
}

draw_set_font(fnt_LCD_SOLID);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
